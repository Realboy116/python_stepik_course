'''Сложение матриц
Напишите программу для вычисления суммы двух матриц.
Формат входных данных
На вход программе подаются два натуральных числа n и m — количество строк и столбцов в матрицах, затем элементы 
первой матрицы, затем пустая строка, далее следуют элементы второй матрицы.
Формат выходных данных
Программа должна вывести результирующую матрицу, разделяя элементы символом пробела.
Sample Input 1:

2 4
1 2 3 4
5 6 7 1

3 2 1 2
1 3 1 3  '''

# n, m = [int(x) for x in input().split()]
# mtx1 = []
# mtx2 = []
# mtx3 = [[0] * m for _ in range(n)]

# for i in range(n):
#     mtx1.append(input().split())

# input()

# for i in range(n):
#     mtx2.append(input().split())
    
# for i in range(n):
#     for j in range(m):
#         mtx3[i][j] = int(mtx1[i][j]) + int(mtx2[i][j])
#         print(mtx3[i][j], end=' ')
#     print()
'''Снежинка
На вход программе подается нечетное натуральное число n. Напишите программу, которая создает матрицу размером n×n 
заполнив её символами . . Затем заполните символами * среднюю строку и столбец матрицы, главную и побочную диагональ 
матрицы. Выведите полученную матрицу на экран, разделяя элементы пробелами.
Формат входных данных
На вход программе подается нечетное натуральное число (n≥3) — количество строк и столбцов в матрице.
Формат выходных данных
Программа должна вывести матрицу в соответствии с условием задачи.'''
# n = int(input())
# mtx = [['.'] * n for _ in range(n)]
# for i in range(n):
#     for j in range(n):
#         if i == j or j == n - i - 1 or i == n // 2 or j == n // 2:
#             mtx[i][j] = '*'
# for i in mtx:
#     print(*i)

