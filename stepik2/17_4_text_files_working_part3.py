'''Входная строка
Напишите программу, которая считывает строку текста и записывает её в текстовый файл output.txt.
Формат входных данных
На вход программе подается строка текста.
Формат выходных данных
Программа должна создать файл с именем output.txt и записать в него считанную строку текста.
Примечание. Считайте, что исполняемая программа и указанный файл находятся в одной папке.'''

# with open('D:/pythonProject/output.txt', 'w', encoding='utf-8') as file:
#     file.write(input())

'''Случайные числа
Напишите программу, записывающую в текстовый файл random.txt 25 случайных чисел в диапазоне от 111 до 777 (включительно),
каждое с новой строки.
Формат входных данных
На вход программе ничего не подается.
Формат выходных данных
Программа должна создать файл с именем random.txt и записать в него случайные числа в соответствии с условием задачи.
Примечание 1. Считайте, что исполняемая программа и указанный файл находятся в одной папке.
Примечание 2. Для генерации случайных чисел используйте модуль random.'''
# from random import randint as ri

# with open('D:/tt/random.txt', 'w') as file:
#     for i in range(25):
#         i = str(ri(111, 778))
#         file.write(i+'\n')

'''Нумерация строк
Вам доступен текстовый файл input.txt, состоящий из нескольких строк. Напишите программу для записи содержимого этого 
файла в файл output.txt в виде нумерованного списка, где перед каждой строкой стоит ее номер, символ ) и пробел. 
Нумерация строк должна начинаться с 1.
Формат входных данных
На вход программе ничего не подается.
Формат выходных данных
Программа должна создать файл с именем output.txt и записать в него пронумерованные строки файла input.txt.
Примечание 1. Считайте, что исполняемая программа и указанные файлы находятся в одной папке.
Примечание 2. Используйте встроенную функцию enumerate().'''

# def pro():                                                         Вариант 1
#     with open('D:/tt/input.txt', 'r', encoding='utf-8') as inn:
#         rows = inn.read().strip().split()
#         #return rows
#     with open('D:/tt/output.txt', 'w', encoding='utf-8') as out:
#        for n, r in enumerate(rows, start=1): 
#            print(str(n) + ')', r, file=out) 
    
# print(pro())

# with open('D:/tt/input.txt', encoding='utf-8') as inn, open('D:/tt/output.txt', 'w', encoding='utf-8') as out:
#     for i, j in enumerate(inn, start=1):
#         print(f'{i}) {j}', end='', file=out)                       Вариант 2

'''Подарок на новый год
Вам доступен текстовый файл class_scores.txt с оценками за итоговый тест на строках вида: фамилия оценка (фамилия и 
оценка разделены пробелом). Оценка - целое число от 0 до 100 включительно.
Напишите программу для добавления 5 баллов к каждому результату теста и вывода фамилий и новых результатов тестов в 
файл new_scores.txt.
Формат входных данных
На вход программе ничего не подается.
Формат выходных данных
Программа должна создать файл с именем new_scores.txt в соответствии с условием задачи.
Примечание 1. Считайте, что исполняемая программа и указанные файлы находятся в одной папке.'''

# with open('D:/tt/class_scores.txt', encoding='utf-8') as cs, open('D:/tt/new_sscores.txt', 'w', encoding='utf-8') as ns:
#     for line in cs.readlines():
#         name, score = line.split()
#         score = min(100, int(score))
#         print(f'{name} {score}', file=ns)   Вариант 1 

# with open('D:/tt/class_scores.txt', encoding='utf-8') as cs, open('D:/tt/new_sscores.txt', 'w', encoding='utf-8') as ns:
#     for i in cs:
#         name, score = i.split()
#         score = int(score) + 5
#         if score > 100:
#             score = 100
#         print(name, score, file=ns)        Вариант 2 с условием  if

'''Лог файл 🌶️
Вам доступен текстовый файл logfile.txt с информацией о времени входа пользователя в систему и выхода из нее. Каждая 
строка файла содержит три значения, разделенные запятыми и символом пробела: имя пользователя, время входа, время 
выхода, где время указано в 24-часовом формате.
Напишите программу, которая создает файл output.txt и выводит в него имена всех пользователей (не меняя порядка 
следования), которые были в сети не менее часа.
Формат входных данных
На вход программе ничего не подается.
Формат выходных данных
Программа должна создать файл с именем output.txt в соответствии с условием задачи.
Примечание 1. Считайте, что исполняемая программа и указанные файлы находятся в одной папке.
Примечание 2. Считайте, что каждый пользователь был только раз в системе, то есть в файле нет двух строк с одинаковым 
пользователем.'''

# with open('D:/tt/logfile.txt', encoding='utf-8') as lf, open('D:/tt/outlog.txt', 'w', encoding='utf-8') as out:
#     for line in lf:
#         name, inn, ex = line.strip().split(', ')
#         inn = int(inn[:2]) * 60 + int(inn[3:]) 
#         ex = int(ex[:2]) * 60 + int(ex[3:])
#         hour = ex - inn >= 60
#         if hour:
#             print(name, file=out)  

# with open('D:/tt/incoming.txt', 'r', encoding='utf-8') as inc, open('D:/tt/result.txt', 'w', encoding='utf-8') as res:
#     for line in inc:
#         line = line.strip()
#         print(line)

'''Количество строк в файле
На вход программе подается строка текста с именем текстового файла. Напишите программу для вывода на экран количества строк данного файла.

Формат входных данных
На вход программе подается строка текста, содержащая имя существующего текстового файла.

Формат выходных данных
Программа должна вывести количество строк файла.

Примечание. Считайте, что исполняемая программа и указанный файл находятся в одной папке.'''

# with open(input(), 'r', encoding='utf-8') as inn:
#     count = 0
#     for line in inn.readlines():
#         count += 1
#     print(count)

'''Суммарная стоимость
Вам доступен текстовый файл ledger.txt с данными о продажах фирмы за месяц. На каждой строке файла указано, сколько 
клиент заплатил за товар, в долларах (целое число):'''

# with open('D:/tt/ledger.txt') as led:
#     res = 0
#     for line in led.readlines():
#         res += int(line.strip('$\n'))
#     print(f'${res}')

'''Goooood students
Вам доступен текстовый файл grades.txt, содержащий оценки студента за три теста в каждом из триместров. Строки файла имеют вид: фамилия оценка_1 оценка_2 оценка_3.

Напишите программу для подсчета количества студентов, сдавших все три теста. Тест считается сданным, если количество баллов по нему не меньше 
65
65.

Формат входных данных
На вход программе ничего не подается.

Формат выходных данных
Программа должна вывести количество студентов, сдавших все три теста.'''

# with open('D:/tt/grades.txt') as gr:
#     count = 0
#     for line in gr:
#         name, g1, g2, g3 = line.split()
#         #map(int, g1, g2, g3)
#         if int(g1) >= 65 and int(g2) >= 65 and int(g3) >= 65:
#             count += 1
#     print(count)

'''Самое длинное слово в файле
Вам доступен текстовый файл words.txt со словами, разделенными пробелом. Напишите программу, которая находит и выводит самые длинные слова этого файла, не меняя порядка их следования.

Формат входных данных
На вход программе ничего не подается.

Формат выходных данных
Программа должна вывести самые длинные слова файла words.txt, каждое с новой строки, не меняя их порядка следования.

Примечание 1. Считайте, что исполняемая программа и указанный файл находятся в одной папке.

Примечание 2. Словом считайте любую группу символов без пробелов, даже если она включает цифры или знаки препинания.'''

# with open('D:/tt/words.txt') as w:
#     ls = w.read().split()
#     maks = len(max(ls, key=len))
#     print(*filter(lambda x: len(x) == maks, ls), sep='\n')

'''Tail of a File
На вход программе подается строка текста с именем текстового файла. Напишите программу, выводящую на экран последние 
10 строк данного файла.
Формат входных данных
На вход программе подается строка текста с именем существующего текстового файла.
Формат выходных данных
Программа должна вывести последние 10 строк этого файла.
Примечание 1. Считайте, что исполняемая программа и файл находятся в одной папке.
Примечание 2. Если количество строк в файле меньше 10, необходимо вывести содержимое файла полностью.'''

# with open(input()) as f:
#     ls = []
#     for s in f:
#         ls.append(s)
#         if len(ls) > 10:
#             del ls[0]
#     print(*ls, sep='')
    
